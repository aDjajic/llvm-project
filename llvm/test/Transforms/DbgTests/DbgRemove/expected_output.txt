; ModuleID = 'test.c'
source_filename = "test.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @foo() local_unnamed_addr #0 !dbg !10 {
  ret i32 5, !dbg !17
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local void @bar() local_unnamed_addr #0 !dbg !18 {
  ret void, !dbg !21
}

; Function Attrs: nofree nosync nounwind memory(none) uwtable
define dso_local i32 @addNumbers(i32 noundef %0) local_unnamed_addr #1 !dbg !22 {
  br label %2

2:                                                ; preds = %6, %1
  %3 = phi i32 [ 0, %1 ], [ %8, %6 ]
  %4 = phi i32 [ %0, %1 ], [ %7, %6 ]
  %5 = icmp eq i32 %4, 0, !dbg !28
  br i1 %5, label %9, label %6, !dbg !30

6:                                                ; preds = %2
  %7 = add nsw i32 %4, -1, !dbg !31
  %8 = add nsw i32 %3, %4, !dbg !32
  br label %2, !dbg !33

9:                                                ; preds = %2
  %10 = add nsw i32 %3, 0, !dbg !32
  ret i32 %10, !dbg !34
}

; Function Attrs: nofree nosync nounwind memory(none) uwtable
define dso_local i32 @hcf(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !35 {
  br label %3

3:                                                ; preds = %7, %2
  %4 = phi i32 [ %0, %2 ], [ %5, %7 ]
  %5 = phi i32 [ %1, %2 ], [ %8, %7 ]
  %6 = icmp eq i32 %5, 0, !dbg !42
  br i1 %6, label %9, label %7, !dbg !44

7:                                                ; preds = %3
  %8 = srem i32 %4, %5, !dbg !45
  br label %3, !dbg !46

9:                                                ; preds = %3
  ret i32 %4, !dbg !47
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

attributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3, !4, !5, !6, !7, !8}
!llvm.ident = !{!9}

!0 = distinct !DICompileUnit(language: DW_LANG_C11, file: !1, producer: "clang version 19.0.0git (git@github.com:aDjajic/llvm-project.git 1e44a9690915e8acf7b2a0e67b56aaf4509e9257)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "test.c", directory: "/home/syrmia/Desktop", checksumkind: CSK_MD5, checksum: "3b62972d4f59b3f969d9c872208645aa")
!2 = !{i32 7, !"Dwarf Version", i32 5}
!3 = !{i32 2, !"Debug Info Version", i32 3}
!4 = !{i32 1, !"wchar_size", i32 4}
!5 = !{i32 8, !"PIC Level", i32 2}
!6 = !{i32 7, !"PIE Level", i32 2}
!7 = !{i32 7, !"uwtable", i32 2}
!8 = !{i32 7, !"debug-info-assignment-tracking", i1 true}
!9 = !{!"clang version 19.0.0git (git@github.com:aDjajic/llvm-project.git 1e44a9690915e8acf7b2a0e67b56aaf4509e9257)"}
!10 = distinct !DISubprogram(name: "foo", scope: !1, file: !1, line: 1, type: !11, scopeLine: 1, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !14)
!11 = !DISubroutineType(types: !12)
!12 = !{!13}
!13 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!14 = !{!15}
!15 = !DILocalVariable(name: "a", scope: !10, file: !1, line: 2, type: !13)
!16 = !DILocation(line: 0, scope: !10)
!17 = !DILocation(line: 3, column: 2, scope: !10)
!18 = distinct !DISubprogram(name: "bar", scope: !1, file: !1, line: 6, type: !19, scopeLine: 6, flags: DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!19 = !DISubroutineType(types: !20)
!20 = !{null}
!21 = !DILocation(line: 7, column: 2, scope: !18)
!22 = distinct !DISubprogram(name: "addNumbers", scope: !1, file: !1, line: 10, type: !23, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !25)
!23 = !DISubroutineType(types: !24)
!24 = !{!13, !13}
!25 = !{!26}
!26 = !DILocalVariable(name: "n", arg: 1, scope: !22, file: !1, line: 10, type: !13)
!27 = !DILocation(line: 0, scope: !22)
!28 = !DILocation(line: 11, column: 9, scope: !29)
!29 = distinct !DILexicalBlock(scope: !22, file: !1, line: 11, column: 7)
!30 = !DILocation(line: 11, column: 7, scope: !22)
!31 = !DILocation(line: 12, column: 29, scope: !29)
!32 = !DILocation(line: 12, column: 14, scope: !29)
!33 = !DILocation(line: 12, column: 16, scope: !29)
!34 = !DILocation(line: 15, column: 1, scope: !22)
!35 = distinct !DISubprogram(name: "hcf", scope: !1, file: !1, line: 17, type: !36, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0, retainedNodes: !38)
!36 = !DISubroutineType(types: !37)
!37 = !{!13, !13, !13}
!38 = !{!39, !40}
!39 = !DILocalVariable(name: "n1", arg: 1, scope: !35, file: !1, line: 17, type: !13)
!40 = !DILocalVariable(name: "n2", arg: 2, scope: !35, file: !1, line: 17, type: !13)
!41 = !DILocation(line: 0, scope: !35)
!42 = !DILocation(line: 18, column: 12, scope: !43)
!43 = distinct !DILexicalBlock(scope: !35, file: !1, line: 18, column: 9)
!44 = !DILocation(line: 18, column: 9, scope: !35)
!45 = !DILocation(line: 19, column: 27, scope: !43)
!46 = !DILocation(line: 19, column: 16, scope: !43)
!47 = !DILocation(line: 22, column: 1, scope: !35)
